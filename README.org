#+title: Zyx

Welcome to Zyx, this is my personal Nix configuration monorepo. It contains configurations for NixOS, Nix-Darwin, Nix-On-Droid and Home Manager.

* Configuration Architecture
The goal of this Nix configuration is to remain as modular and extensible as possible. This is achieved by following a layered configuration architecture.

** Overview
There are three primary layers to this Nix configuration, each one building a new level of abstraction and answering a different question. They are as follows:

1. Profile Layer

   /What can the host do?/

   This layer is responsible for defining the various capabilities of the host platform (the machine that the configuration is being deployed to). Some examples of valid profiles would be

   - ~server~
   - ~desktop~
   - ~laptop~
   - ~virtual-machine~

2. Role Layer

   /What should the host be capable of?/

   This layer is responsible for defining what the machine will be used for. It outlines various use-cases, some examples of valid roles include:

   - ~gaming~
   - ~development~
   - ~workstation~

3. Provider Layer

   /How will the the host perform its features?/

   This layer is responsible for concreate implementations of different features and functionality. It contains application or service configurations which the host will use to actually perform any task.

** Directory Structure

*** =lib=

#+begin_src shell
.
├── builder
├── default.nix
├── filesystem
└── overlay
#+end_src

This is the home for all additional library functions used throughout the configuration.

*** =modules=

#+begin_src shell
.
├── profiles
├── providers
├── roles
#+end_src

This is where all modules are stored. It is subdivided based on the three different configuration layers described above. Furthermore, the =providers= directory has separate directories for =common=, =nixos=, =darwin=, and =home= related implementations.

*** =systems=
#+begin_src shell
.
└── x86_64-linux
    └── eye-of-god
#+end_src

This contains all the system configurations for the various hosts which are deployed by this configuration. They are separated into directories based on the system architecture and then the hostname of the system.
